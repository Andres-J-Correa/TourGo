name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Change to repo directory
            cd ~/TourGo || { echo "Directory ~/TourGo does not exist"; exit 1; }

            # Pull latest changes
            git pull origin main || { echo "git pull failed"; exit 1; }

            # Inject secrets into .env
            cd client
            cat <<EOF > .env
            REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.CLIENT_GOOGLE_RECAPTCHA_SITE_KEY }}
            EOF

            # Client Deployment
            yarn install || { echo "yarn install failed"; exit 1; }
            yarn build || { echo "yarn build failed"; exit 1; }
            if [ -d "./build" ] && [ "$(ls -A ./build)" ]; then
                sudo rsync -avz --delete ./build/ /var/www/html/
            else
                echo "Build directory is missing or empty"
                exit 1
            fi

            # Server Deployment
            cd ..
            dotnet publish server/TourGo.Web.Api/TourGo.Web.Api.csproj -c Release -o ./server/publish || { echo "dotnet publish failed"; exit 1; }
            if [ -d "./server/publish" ] && [ "$(ls -A ./server/publish)" ]; then
                sudo rsync -avz --delete ./server/publish/ /var/www/server/
            else
                echo "Publish directory is missing or empty"
                exit 1
            fi

            # Inject secrets into appsettings.Production.json
            cd ~
            cd /var/www/server
            jq --arg json_token_secret "${{ secrets.SERVER_JSON_WEB_TOKEN_SECRET }}" \
               --arg mysql_conn_string "${{ secrets.SERVER_MY_SQL_DATABASE_CONN_STRING_PROD }}" \
               --arg brevo_api_key "${{ secrets.SERVER_BREVO_API_KEY }}" \
               --arg awss3_access_key "${{ secrets.SERVER_AWS_S3_ACCESS_KEY }}" \
               --arg awss3_secret_key "${{ secrets.SERVER_AWS_S3_SECRET_KEY }}" \
               --arg user_pii_encrypt_key "${{ secrets.SERVER_USER_PII_ENCRYPTION_KEY }}" \
               --arg google_recaptcha_v3_secret_key "${{ secrets.SERVER_GOOGLE_RECAPTCHA_SECRET_KEY }}" \
               '.JsonWebTokenConfig.Secret = $json_token_secret |
                .ConnectionStrings.MySql = $mysql_conn_string |
                .BrevoConfig.ApiKey = $brevo_api_key |
                .AWSS3Config.AccessKey = $awss3_access_key |
                .AWSS3Config.SecretKey = $awss3_secret_key |
                .EncryptionConfig.UserPIIKey = $user_pii_encrypt_key |
                .GoogleRecaptchaConfig.SecretKey = $google_recaptcha_v3_secret_key' \
               appsettings.Production.json > appsettings.Production.tmp && mv appsettings.Production.tmp appsettings.Production.json

            sudo systemctl restart kestrel-tourgo
